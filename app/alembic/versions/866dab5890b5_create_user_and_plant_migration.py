"""create user and plant migration

Revision ID: 866dab5890b5
Revises: 
Create Date: 2024-01-11 01:06:53.296057

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '866dab5890b5'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('plant', sa.Column('species', sa.String(), nullable=True))
    op.add_column('plant', sa.Column('create_time', sa.DateTime(), nullable=True))
    op.add_column('plant', sa.Column('last_update_time', sa.DateTime(), nullable=True))
    op.drop_column('plant', 'created_at')
    op.add_column('user', sa.Column('create_time', sa.DateTime(), nullable=True))
    op.add_column('user', sa.Column('last_update_time', sa.DateTime(), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('user', 'last_update_time')
    op.drop_column('user', 'create_time')
    op.add_column('plant', sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.drop_column('plant', 'last_update_time')
    op.drop_column('plant', 'create_time')
    op.drop_column('plant', 'species')
    # ### end Alembic commands ###
